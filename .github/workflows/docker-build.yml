name: Build Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
    IMAGE: ghcr.io/${{ github.repository_owner }}/epg

permissions:
  contents: write
  packages: write

concurrency:
  group: docker-build
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
            tag_suffix: linux-amd64
            # node_version: 24     # use default from Dockerfile
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            tag_suffix: linux-arm64
            # node_version: 24     # use default from Dockerfile
          - platform: linux/arm/v7
            runner: ubuntu-24.04-arm
            tag_suffix: linux-armv7
            node_version: 22       # older Node.js for ARMv7 -> node version > 22 is not supported

    runs-on: ${{ matrix.runner || 'ubuntu-24.04' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ matrix.tag_suffix }}
          build-args: |
            NODE_VERSION=${{ matrix.node_version }}
          cache-from: type=gha,scope=epg-${{ matrix.tag_suffix }}
          cache-to:   type=gha,mode=max,scope=epg-${{ matrix.tag_suffix }}


  manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute short SHA
        id: vars
        shell: bash
        run: echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Create manifest (short-sha)
        run: |
          IMAGE="${{ env.IMAGE }}"
          SHORT_SHA="${{ steps.vars.outputs.short_sha }}"

          docker buildx imagetools create \
            -t "${IMAGE}:${SHORT_SHA}" \
              "${IMAGE}:linux-amd64" \
              "${IMAGE}:linux-arm64" \
              "${IMAGE}:linux-armv7"

      - name: Alias short-sha -> alias
        run: |
          IMAGE="${{ env.IMAGE }}"
          SHORT_SHA="${{ steps.vars.outputs.short_sha }}"
          docker buildx imagetools create \
            -t "${IMAGE}:latest" \
            "${IMAGE}:${SHORT_SHA}"

      - name: Inspect manifests
        run: |
          IMAGE="${{ env.IMAGE }}"
          SHORT_SHA="${{ steps.vars.outputs.short_sha }}"
          docker buildx imagetools inspect "${IMAGE}:${SHORT_SHA}"
          docker buildx imagetools inspect "${IMAGE}:latest"
